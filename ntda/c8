Secure communication properties
1) Confidentiality
2) Message integrity
3) End point authentication
4) Operational security

Ka(m) - encrypt (with Alice Ka key)
Kb(Ka(m)) - decrypt (with Bob key)
if symmetric key system => Ka == Kb

=====================================================

Cipher-Block Chaining (CBC)

-------------------- not efficient --------------------
c(i) = Ks(m(i) ^ r(i)) r(i) - random number ---> c(1), r(1), c(2), r(2), ...
m(i) = Ks(c(i)) ^ r(i)
-------------------------------------------------------
k-bit - Initial Vector (IV) - c(0)
sender -   c(i) = Ks(m(i) ^ c(i - 1))
receiver - m(i) = Ks(c(i)) ^ c(i - 1)

=====================================================

Public Key Encription

K+ - public key
K- - private key

encryption K+(m) ----> decryption K-(K+(m))
symetric K-(K+(m)) == K+(K-(m))
=====================================================

authentication key - s (shared secret)

H(m + s) - message authentication code (MAC)

INTEGRITY
(m, H(m + s)) --->

DIGITAL SIGNATURES

for m compute K-(m) [providing integrity too because K-(m) != m']
optimization 
sign H(m) not m => k-(H(m))

END-POINT AUTHENTICATION

nonce - R (protocl will use only once)

1) A -> B "I am Alice"
2) B -> A R
3) A -> B Ka-b(R)
4) Ka-b(Ka-b(R)) == R

=====================================================
Secure e-mail

confidentiality
[Ks(m)]++[Kb+(Ks)] ->
authentication & message integrity
[Ka-(H(m))]++[m]

final 

[Ks[(Ka-(H(m))]++[m])]++[Kb+(Ks)]
=====================================================
SSL/TSL

1: -> TCPSYN 
2: <- TCP/SYNACK
3: -> TCP ACK 
4: -> SSL hello
5: <- certificate
6: -> EMS = Ka+(MS)

Eb = session encryption key for data sent from Bob to Alice
Mb = session MAC key for data sent from Bob to Alice
Ea = session encryption key for data sent from Alice to Bob
Ma = session MAC key for data sent from Alice to Bob

MAC = H(record ++ Mb ++ currentSequenceNumber)
payload = Eb(record ++ MAC)

SSL-record

type - handshake msg or data msg or FIN msg
version
length
payload (see above)

=====================================================
IPSec

1. Authentication Header (AH) 
    1.1 source authentication
    1.2 data integrity
    1.3 NOT confidentiality
2. Encapsulation Security Payload (ESP)

security association (SA) - simplex logical connection

SA state
1. 32 bit identifier of the SA - Security Parameter Index(SPI)
2. origin interface
3. destination interface
4. encryption type
5. encryption key
6. integrity check type
7. authentication key

Security Association Database (SAD) - db for SA states in OS kernel

2 packet modes

1. tunnel mode
2. transport mode

ESP trailer - padding - for block cipher
              pad length
              next header - type of data  

ESP header - SPI - indicate SA
             sequence nuber - against replay attack

Security Policy Database (SPD) - what to do with arriving datagram
                         (SAD) - how to do with arraiving datagram

=====================================================
Securing Wireless LANs

802.11i 
1. Discovery
2. Mutual authentication and Master Key (MK) generation
    EAP (EAPoL over wireless lan) & (RADIUS/UDP/IP over wired network to AS)
    EAP - Extensible Authentication Protocol
3. Pairwise Master Key (PMK) generation
    AS -> (PMK) -> AP
4. Temporal Key (TK) generation
    Will be used for clien & AP communication

=====================================================
Firewall

GOALS
1. All traffic from outside to inside, and vice versa, passes through the firewall
2. Only authorized traffic, as defined by the local security policy, will be allowed to pass
3. The firewall itself is immune to penetration

TYPES
1. traditional packet filters (individual packets)
2. stateful filters           (connection state)
3. application gateways

=====================================================
Intrusion Detection System  - IDS
Intrusion Prevention System - IPS

       +--- signature-based system
       |
IDS ---+
       |
       +--- anomaly-based system
